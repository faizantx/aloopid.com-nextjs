/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: b3A98xAuzjmqz7n1KjRySq
// Component: -IqrinOZtZ50
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Navbar from "../../Navbar"; // plasmic-import: qNVrAAW10BN8/component
import Section from "../../Section"; // plasmic-import: v8D2PtSodR0v/component
import FooterSection from "../../FooterSection"; // plasmic-import: 3qZd50KAbhlj/component
import { useScreenVariants as useScreenVariantsdC4SM9BtzvH } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: d-c4sM9BtzvH/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: b3A98xAuzjmqz7n1KjRySq/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: -IqrinOZtZ50/css

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsdC4SM9BtzvH()
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <div className={classNames(projectcss.all, sty.freeBox__b2Ng)}>
              <div className={classNames(projectcss.all, sty.freeBox__nxnB)}>
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {"Your Workspace, Extended."}
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__q2P6L
                  )}
                >
                  {
                    "A personal, team messenger \u2014 made to connect teams, across workspaces."
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___4VX4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bCyR9
                    )}
                  >
                    {"Aloop is free to try"}
                  </div>
                </Stack__>
              </div>
            </div>
          </Stack__>
          <section className={classNames(projectcss.all, sty.section__zuvMz)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ecZjw)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__zXcGy)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"250px"}
                loading={"lazy"}
                onClick={async event => {
                  const $steps = {};
                  $steps["goToHttpsAppsAppleComUsAppAloopId6741483277"] = true
                    ? (() => {
                        const actionArgs = {
                          destination:
                            "https://apps.apple.com/us/app/aloop/id6741483277"
                        };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToHttpsAppsAppleComUsAppAloopId6741483277"] !=
                      null &&
                    typeof $steps[
                      "goToHttpsAppsAppleComUsAppAloopId6741483277"
                    ] === "object" &&
                    typeof $steps["goToHttpsAppsAppleComUsAppAloopId6741483277"]
                      .then === "function"
                  ) {
                    $steps["goToHttpsAppsAppleComUsAppAloopId6741483277"] =
                      await $steps[
                        "goToHttpsAppsAppleComUsAppAloopId6741483277"
                      ];
                  }
                }}
                src={{
                  src: "/plasmic/light_saa_s_landing_page/images/image.svg",
                  fullWidth: 119.664,
                  fullHeight: 40,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__uv8QL)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"280px"}
                loading={"lazy"}
                onClick={async event => {
                  const $steps = {};
                  $steps["goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"] =
                    true
                      ? (() => {
                          const actionArgs = {
                            destination:
                              "https://play.google.com/store/apps/details?id=com.aloop"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                  if (
                    $steps[
                      "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                    ] != null &&
                    typeof $steps[
                      "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                    ] === "object" &&
                    typeof $steps[
                      "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                    ].then === "function"
                  ) {
                    $steps["goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"] =
                      await $steps[
                        "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                      ];
                  }
                }}
                src={{
                  src: "/plasmic/light_saa_s_landing_page/images/image2.svg",
                  fullWidth: 180,
                  fullHeight: 53.333,
                  aspectRatio: undefined
                }}
              />
            </Stack__>
          </section>
          <Section
            className={classNames("__wab_instance", sty.section__fDji4)}
            size={
              hasVariant(globalVariants, "screen", "mobile")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___8MCvf)}
              displayHeight={"840px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"1140px"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/light_saa_s_landing_page/images/heroPng.png",
                fullWidth: 1290,
                fullHeight: 1581,
                aspectRatio: undefined
              }}
            />
          </Section>
          <Section
            className={classNames("__wab_instance", sty.section__uzd6K)}
            size={
              hasVariant(globalVariants, "screen", "mobile")
                ? "fullContentWidth"
                : undefined
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox__sMyUt)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__ux0Q3
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "Lorem Ipsum"
                  : "Built for internal and external collaboration"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aGWn5
                )}
              >
                {
                  "Create or join workspaces to collaborate seamlessly with both your team members and external partners."
                }
              </div>
            </div>
          </Section>
          <Section
            className={classNames("__wab_instance", sty.section__lKvOq)}
            size={
              hasVariant(globalVariants, "screen", "mobile")
                ? "fullContentWidth"
                : "fullContentWidth"
            }
          >
            <div className={classNames(projectcss.all, sty.freeBox___6Ppwk)}>
              <div className={classNames(projectcss.all, sty.columns__zqDX)}>
                <div className={classNames(projectcss.all, sty.column__y6Few)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vqmSy)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__pSvpB
                      )}
                    >
                      {"Create workspace"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wWa
                      )}
                    >
                      {
                        "Create a workspace in seconds and bring your team together in one organized space. Share updates, chat in real time, and keep work flowing, internally and externally."
                      }
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__jGiFy)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__efnYy)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"500px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "284px"
                        : "auto"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/light_saa_s_landing_page/images/workspacePng.png",
                      fullWidth: 1289,
                      fullHeight: 863,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__q6Sq0)}>
              <div className={classNames(projectcss.all, sty.columns__gAj7C)}>
                <div className={classNames(projectcss.all, sty.column__yJrw9)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__hpUx0)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "284px"
                        : "500px"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "284px"
                        : "auto"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/light_saa_s_landing_page/images/aloopidPng.png",
                      fullWidth: 188,
                      fullHeight: 159,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__hxEbW)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__am9Bv)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__aeAql
                      )}
                    >
                      {"Connect externally"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rE3N6
                      )}
                    >
                      {
                        "Need to loop in a client, vendor, or partner? With external connections, you can easily bring people outside your organization into the conversation. Share what\u2019s needed, stay aligned, and collaborate seamlessly across boundaries. It\u2019s the easiest way to keep work organized."
                      }
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__sl6RP)}>
              <div className={classNames(projectcss.all, sty.columns__zwpdk)}>
                <div className={classNames(projectcss.all, sty.column___9QHl3)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1EIx5)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3___3JmBe
                      )}
                    >
                      {"Message threads"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__f4Gi
                      )}
                    >
                      {
                        "Keep conversations focused with message threads. Replies stay neatly grouped under the original message, making it easy to follow discussions and decisions. Whether you're clarifying a question or diving deep into a topic, threads help your team stay organized and on track. No more lost context, no more chaos."
                      }
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__bjtx1)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__mo32O)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "284px"
                        : "500px"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/light_saa_s_landing_page/images/threadsnewPng.png",
                      fullWidth: 1290,
                      fullHeight: 896,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__j6GaM)}>
              <div className={classNames(projectcss.all, sty.columns__bm2Gw)}>
                <div className={classNames(projectcss.all, sty.column__iFWab)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__qM5Ta)}
                    displayHeight={"315px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "284px"
                        : "500px"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/light_saa_s_landing_page/images/enPng.png",
                      fullWidth: 1290,
                      fullHeight: 808,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__nEv1R)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qGc0L)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__apFbx
                      )}
                    >
                      {"Built for work"}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mrCqO
                      )}
                    >
                      {
                        "Designed for thoughtful, professional communication, the extendable input makes it easy to draft clear, structured messages. All within a clean, simple interface that feels instantly familiar. Just a smooth, focused experience built for getting work done."
                      }
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Section>
          <div className={classNames(projectcss.all, sty.freeBox__na5Wn)}>
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2___52Itd
              )}
            >
              {hasVariant(globalVariants, "screen", "mobile")
                ? "Lorem Ipsum"
                : "And much more..."}
            </h2>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fQlVl
              )}
            >
              {"Download Aloop to discover more features"}
            </div>
            <section className={classNames(projectcss.all, sty.section__wCnm)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dU8Cl)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__lGZy)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"250px"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToHttpsAppsAppleComUsAppAloopId6741483277"] = true
                      ? (() => {
                          const actionArgs = {
                            destination:
                              "https://apps.apple.com/us/app/aloop/id6741483277"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHttpsAppsAppleComUsAppAloopId6741483277"] !=
                        null &&
                      typeof $steps[
                        "goToHttpsAppsAppleComUsAppAloopId6741483277"
                      ] === "object" &&
                      typeof $steps[
                        "goToHttpsAppsAppleComUsAppAloopId6741483277"
                      ].then === "function"
                    ) {
                      $steps["goToHttpsAppsAppleComUsAppAloopId6741483277"] =
                        await $steps[
                          "goToHttpsAppsAppleComUsAppAloopId6741483277"
                        ];
                    }
                  }}
                  src={{
                    src: "/plasmic/light_saa_s_landing_page/images/image.svg",
                    fullWidth: 119.664,
                    fullHeight: 40,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ykU3)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"280px"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"] =
                      true
                        ? (() => {
                            const actionArgs = {
                              destination:
                                "https://play.google.com/store/apps/details?id=com.aloop"
                            };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps[
                        "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                      ] != null &&
                      typeof $steps[
                        "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                      ] === "object" &&
                      typeof $steps[
                        "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                      ].then === "function"
                    ) {
                      $steps[
                        "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                      ] = await $steps[
                        "goToHttpsPlayGoogleComStoreAppsDetailsIdComAloop"
                      ];
                    }
                  }}
                  src={{
                    src: "/plasmic/light_saa_s_landing_page/images/image2.svg",
                    fullWidth: 180,
                    fullHeight: 53.333,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
            </section>
          </div>
          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "headerHeroSection", "navbar", "h1", "footerSection"],
  headerHeroSection: ["headerHeroSection", "navbar", "h1"],
  navbar: ["navbar"],
  h1: ["h1"],
  footerSection: ["footerSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    h1: makeNodeComponent("h1"),
    footerSection: makeNodeComponent("footerSection"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
